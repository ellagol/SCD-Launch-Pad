<UserControl x:Class="ContentMgmtModule.CMContentManagementView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:dd="clr-namespace:Infra.DragDrop;assembly=Infra.DragDrop"          
             xmlns:mvvm="clr-namespace:Infra.MVVM;assembly=Infra.MVVM"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ContentMgmtModule"
             xmlns:cm="clr-namespace:ContentMgmtModule;assembly=ContentMgmtModule"
             xmlns:bo="clr-namespace:ATSBusinessObjects;assembly=ATSBusinessObjects" 
             xmlns:cmtn="clr-namespace:ATSBusinessObjects.ContentMgmtModels;assembly=ATSBusinessObjects" 
             mc:Ignorable="d" >


    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--Metro Tab Control-->
                <ResourceDictionary Source="pack://application:,,,/ContentMgmtModule;component/Resources/Themes/MetroTabStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>


            <!--Converters-->
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

            <!--Blue Office 2010 Gradient-->
            <Color x:Key="BackgroundC1">#FFCFDDEE</Color>
            <Color x:Key="BackgroundC2">#FFC2D4E8</Color>

            <LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0.5" EndPoint="0,1">
                <GradientStop Color="{DynamicResource BackgroundC1}" Offset="0"/>
                <GradientStop Color="{DynamicResource BackgroundC2}" Offset="1"/>
            </LinearGradientBrush>

            <DataTemplate DataType="{x:Type local:CMContentManagementViewModel}">
                <local:CMContentManagementView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type local:CMFolderDetailsViewModel}">
                <local:CMFolderDetailsView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type local:CMContentDetailsViewModel}">
                <local:CMContentDetailsView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type local:CMVersionDetailsViewModel}">
                <local:CMVersionDetailsView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type local:CMWhereUsedViewModel}">
                <local:CMWhereUsedView />
            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>

    <!--Wrapping the LayoutRoot grid with a border that will be used to determine Workspace actual Width and Height for the Overlay-->
    <!--Wrapping the LayoutRoot grid with a border that will be used to determine Workspace actual Width and Height for the Overlay-->
    <Border x:Name="DummyWorkspaceSize" BorderBrush="Transparent" BorderThickness="0" Padding="0,0,0,0">
        <Grid x:Name="VisualRoot" Background="{StaticResource BackgroundBrush}" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="370" MinWidth="300" MaxWidth="800" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="10" />
                    <RowDefinition Height="35" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>


                <Border Grid.Row="1" BorderBrush="LightBlue" BorderThickness="1" CornerRadius="8" Margin="1" Background="LightBlue">
                    <!--ToolBarTray Background="LightBlue" HorizontalAlignment="Left" VerticalAlignment="Center" ToolBarTray.IsLocked="True" -->
                        <ToolBar Background="LightBlue"  HorizontalAlignment="Stretch"  VerticalAlignment="Center"  VerticalContentAlignment="Center">
                            <Button ToolTip="Refresh" VerticalAlignment="Center" Command="{Binding RefreshCommand}">
                                <Image Source ="pack://application:,,,/ExplorerModule;component/Resources/Icons/32x32/Refresh.png"/>
                            </Button>
                        </ToolBar>
                    <!--/ToolBarTray-->
                </Border>


                <TreeView Name="ContentTreeViewStandard" Grid.Row="2" Margin="0,10,10,10" VerticalAlignment="Stretch" ItemsSource="{Binding TreeNodes}" FontSize="14" Background="Transparent" BorderThickness="0"
                                  dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding}" dd:DragDrop.UseDefaultDragAdorner="True">
                    <TreeView.ItemContainerStyle>
                        <!-- This Style binds a TreeViewItem to a TreeViewNodeViewModel -->
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter 
                              Property="local:CMTreeViewItemBehavior.IsBroughtIntoViewWhenSelected" 
                              Value="True"/>
                            <!--<EventSetter Event="Selected" Handler="TreeViewSelectedItemChanged" />-->
                            <!--<EventSetter Event="Expanded" Handler="TreeExpanded" />-->
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="FontWeight" Value="DemiBold" />
                            <Setter Property="FontSize" Value="16" />
                            <Setter Property="Foreground" Value="DarkBlue" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Setter Property="Foreground" Value="Black" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.Resources>
                        <!--/////////////////////////////////////-->
                        <!-- Provide the Templates per Node Type -->
                        <!--/////////////////////////////////////-->
                        <!-- Root Node Template -->
                        <HierarchicalDataTemplate DataType="{x:Type local:CMTreeViewRootNodeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu Visibility="{Binding Path=IsAddFolderToRoot, Converter={StaticResource BoolToVisibilityConverter}}">
                                        <MenuItem Header="New Folder"  Command="{Binding NewNodeCommand}" CommandParameter="{x:Static cmtn:TreeNodeObjectType.Folder}"/>
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <Image Width="16" Height="16" Source="{Binding NodeIcon}" VerticalAlignment="Center"  />
                                <TextBlock Text="{Binding NodeData}" VerticalAlignment="Center" Margin="3,0,0,0" FontWeight="Bold" FontStyle="Italic" FontSize="20" />
                            </StackPanel>
                        </HierarchicalDataTemplate>

                        <!-- Folder Node Template -->
                        <HierarchicalDataTemplate DataType="{x:Type local:CMTreeViewFolderNodeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">

                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="New Content" Visibility="{Binding Path=IsAddContent, Converter={StaticResource BoolToVisibilityConverter}}" Command="{Binding NewNodeCommand}" CommandParameter="{x:Static cmtn:TreeNodeObjectType.Content}" />
                                        <MenuItem Header="New Folder" Visibility="{Binding Path=IsAddFolder, Converter={StaticResource BoolToVisibilityConverter}}" Command="{Binding NewNodeCommand}" CommandParameter="{x:Static cmtn:TreeNodeObjectType.Folder}" />

                                        <Separator />

                                        <MenuItem Header="Delete" Visibility="{Binding Path=IsDelete, Converter={StaticResource BoolToVisibilityConverter}}" Command="{Binding DeleteFolderCommand}" />
                                    </ContextMenu>
                                </StackPanel.ContextMenu>

                                <Image Width="16" Height="16" Source="{Binding NodeIcon}" VerticalAlignment="Center"  />
                                <TextBlock Text="{Binding NodeData}" VerticalAlignment="Center" Margin="3,0,0,0" />
                            </StackPanel>
                        </HierarchicalDataTemplate>

                        <!-- Content Node Template -->
                        <HierarchicalDataTemplate DataType="{x:Type local:CMTreeViewContentNodeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">

                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="New Version" Visibility="{Binding Path=IsAddVersion, Converter={StaticResource BoolToVisibilityConverter}}" Command="{Binding NewNodeCommand}" CommandParameter="{x:Static cmtn:TreeNodeObjectType.ContentVersion}" />

                                        <Separator />

                                        <MenuItem Header="Delete" Visibility="{Binding Path=IsDelete, Converter={StaticResource BoolToVisibilityConverter}}" Command="{Binding DeleteContentCommand}" />
                                    </ContextMenu>
                                </StackPanel.ContextMenu>

                                <Image Width="16" Height="16" Source="{Binding NodeIcon}" VerticalAlignment="Center"  />
                                <TextBlock Text="{Binding NodeData}" VerticalAlignment="Center" Margin="3,0,0,0" />
                            </StackPanel>
                        </HierarchicalDataTemplate>


                        <!-- Version Node Template -->
                        <HierarchicalDataTemplate DataType="{x:Type local:CMTreeViewVersionNodeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">

                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Delete" Visibility="{Binding Path=IsDelete, Converter={StaticResource BoolToVisibilityConverter}}" Command="{Binding DeleteVersionCommand}" />
                                        <MenuItem Header="Where Used" Command="{Binding WhereUsedCommand}" />
                                    </ContextMenu>
                                </StackPanel.ContextMenu>

                                <Image Width="16" Height="16" Source="{Binding NodeIcon}" VerticalAlignment="Center"  />
                                <TextBlock Text="{Binding NodeData}" VerticalAlignment="Center" Margin="3,0,0,0" />
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                </TreeView>

                <Separator Grid.Row="3" Style="{DynamicResource HorizontalSeparatorStyle}" Margin="10,0,10,0" />

                <Grid Grid.Row="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left">
                        <Button Content="Search" Command="{Binding CMSearchCommand}"  Width="70" Margin="10,10,0,10" />
                        <TextBox Text="{Binding Path=SearchText, UpdateSourceTrigger=PropertyChanged}" Width="120" Margin="10,10,10,10" />
                        <Button Content="Next" Command="{Binding FindCommand}" Width="60" Margin="0,10,0,10" />
                    </StackPanel>

                    <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Content="+" Command="{Binding ExpandAllCommand}" Width="20" Margin="0,10,10,10" ToolTip="Expand All Nodes" />
                        <Button Content="-" Command="{Binding CollapseAllCommand}" Width="20" Margin="0,10,10,10" ToolTip="Collapse All Nodes" />
                    </StackPanel>
                </Grid>
            </Grid>

            <GridSplitter Grid.Column="1" VerticalAlignment="Stretch" Width="6" Margin="0,0,0,0" ResizeBehavior="PreviousAndNext" />

            <!--Content View-->
            <ContentControl Grid.Column="2" Content="{Binding DetailsViewModel, Mode=OneWay}" Margin="10,10,10,10" />

        </Grid>
    </Border>
</UserControl>

