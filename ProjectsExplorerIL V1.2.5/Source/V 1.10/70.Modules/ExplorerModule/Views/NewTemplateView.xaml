<UserControl x:Class="ExplorerModule.NewTemplateView" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mvvm="clr-namespace:Infra.MVVM;assembly=Infra.MVVM"
    xmlns:notes="clr-namespace:NotesModule;assembly=NotesModule"               
    xmlns:local="clr-namespace:ExplorerModule"
    xmlns:np="NavigationPane"
    xmlns:dd="clr-namespace:Infra.DragDrop;assembly=Infra.DragDrop"          
    mc:Ignorable="d"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="445" d:DesignWidth="488"
    >



    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--Metro Tab Control-->
                <ResourceDictionary Source="pack://application:,,,/ExplorerModule;component/Resources/Themes/MetroTabStyle.xaml" />

            </ResourceDictionary.MergedDictionaries>

            <DataTemplate DataType="{x:Type local:StationCertificateListViewModel}">
                <AdornerDecorator>
                    <local:StationCertificateListView/>
                </AdornerDecorator>
            </DataTemplate>

            <DataTemplate DataType="{x:Type local:PriorityPopupViewModel}">
                <AdornerDecorator>
                    <local:PriorityPopupView/>
                </AdornerDecorator>
            </DataTemplate>
            <BooleanToVisibilityConverter x:Key="VisibilityConverter"/>

            <Style x:Key="ContentListViewStyle" TargetType="{x:Type ListView}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                <Setter Property="AlternationCount" Value="0" />
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Background" Value="Transparent" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

            <DataTemplate x:Key="SubFolderTileTemplate" DataType="{x:Type local:TreeViewNodeViewModelBase}">
                <Border HorizontalAlignment="Stretch" BorderBrush="Transparent" BorderThickness="0" Padding="5" >
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="0" Height="80" Stretch="Uniform" Source="{Binding LargeIcon}" />
                        <StackPanel Grid.Column="1" Margin="2,0" VerticalAlignment="Center">
                            <TextBlock Text="{Binding Name}" TextBlock.FontWeight="Bold" />
                            <TextBlock Text="{Binding Description}" Margin="0,0,0,0" />
                        </StackPanel>
                    </Grid>
                </Border>
            </DataTemplate>

            <Style x:Key="CertificatesListViewStyle" TargetType="{x:Type ListView}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                <Setter Property="AlternationCount" Value="0" />
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Background" Value="Transparent" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>



    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <DockPanel x:Name="ContentArea" Grid.Row="0" >

            <!--Notes SideBar-->
            <np:NavigationPane x:Name="navigationPane" Width="0" HorizontalAlignment="Left" IsEnabled="False" Visibility="Collapsed"  />
            <np:NavigationPaneExpander x:Name="NavigationPaneExpander" Width="300" Margin="0,0,2,1" DockPanel.Dock="Right" Orientation="Right" Header="" IsMinimized="{Binding Path=ShowNotes}" Visibility="{Binding Path=IsNotesVisible}"   >
                <HeaderedContentControl Header="Notes">
                    <Grid np:NavigationPaneExpander.CanResize="False">
                        <notes:NotesControl DataContext="{Binding Notes}" Margin="10" />
                    </Grid>
                </HeaderedContentControl>

            </np:NavigationPaneExpander>



            <!--Main Content Area-->
            <ScrollViewer Grid.Row="0" CanContentScroll="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                <TabControl SelectedIndex="{Binding Path=tabIndex, Mode=TwoWay}" Style="{DynamicResource MetroTab}">



                    <!--Contents Tab-->
                    <!--SubFolders TabItem-->
                    <TabItem Header="{Binding Path=Name}" Style="{DynamicResource MetroTabItem}" BorderBrush="Blue" Width="210">
                        <Grid>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />

                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="6" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>


                            <!-- Active Contents-->
                            <ListView x:Name="ContentsList" SelectedItem="{Binding Path=contentToAction}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" ItemsSource="{Binding Path = activeContents, Mode= TwoWay}" HorizontalAlignment="Stretch" Margin="0,6,0,0" VerticalAlignment="Top" Background="#FF454545"
                                       SelectionMode="Single" MinHeight="120" Width="650" MaxHeight="300" ScrollViewer.CanContentScroll="True"
                                       dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding}" dd:DragDrop.UseDefaultDragAdorner="True">
                                <ListView.Resources>
                                    <ContextMenu x:Key="ItemContextMenu">
                                        <MenuItem Header="Open in CM" Command="{Binding DataContext.OpenContentVersionInCm,   RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"/>
                                        <MenuItem Header="Change Priority" Command="{Binding DataContext.PopupCommand,   RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"/>
                                        <MenuItem Header="Execute" Command="{Binding DataContext.ContentCopyCommand,   RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"/>
                                        <MenuItem Header="Remove"  Command="{Binding DataContext.ContentRemoveCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"/>
                                        <!--<MenuItem Header="Update Execution Priority"  Command="{Binding DataContext.UpdateExecutionPriorityCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"/>-->
                                    </ContextMenu>
                                    <Style TargetType="GridViewColumnHeader">
                                        <Setter Property="IsEnabled" Value="True"/>
                                        <Setter Property="TextElement.Foreground" Value="Black"/>
                                    </Style>
                                </ListView.Resources>



                                <ListView.View>
                                    <GridView x:Name="activeContents" AllowsColumnReorder="False">

                                        <GridViewColumn Width="30" Header=" ">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Image Source="{Binding IconFileFullPath}" Width="16" Height="16" ></Image>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="160"  Header="Content" DisplayMemberBinding="{Binding name}"/>
                                        <GridViewColumn Width="145"  Header="Content Category"  DisplayMemberBinding="{Binding contentCategory}"/>
                                        <GridViewColumn Width="125"  Header="Content Version" DisplayMemberBinding="{Binding version}"/>
                                        <GridViewColumn Width="85"   Header="Status" DisplayMemberBinding="{Binding status}"/>
                                        <GridViewColumn Width="85"   Header="Priority" DisplayMemberBinding="{Binding seq}"/>

                                    </GridView>
                                </ListView.View>

                                <ListView.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListViewItem}" >
                                        <Setter Property="mvvm:EventToCommand.Event" Value="MouseDoubleClick" />
                                        <Setter Property="mvvm:EventToCommand.Command" Value="{Binding ElementName=ContentsList, Path=DataContext.ContentCopyCommand}" />
                                        <Setter Property="mvvm:EventToCommand.CommandParameter" Value="{Binding ContentCopyCommand}" />
                                        <Setter Property="local:ActiveVersionsItemBehavior.IsActiveVersionsItemBehavior" Value="True"/>
                                        <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>

                                    </Style>
                                </ListView.ItemContainerStyle>

                            </ListView>


                            <!--<Button Name="btnUpContent" Grid.Row="3" Grid.Column="2" Content=" ↑ " Command="{Binding UpContentCommand}" Margin="300,5,0,0" VerticalAlignment="Top" MaxWidth="35" />
                            <Button Name="btnDownContent" Grid.Row="3" Grid.Column="2" Content=" ↓ " Command="{Binding DownContentCommand}" Margin="300,5,90,0"  VerticalAlignment="Top" MaxWidth="35"/>-->

                            <ProgressBar Value="{Binding Path=Progress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Maximum="{Binding Path=ProgressMax, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" Margin="0" MaxHeight="40" Height="40" />
                            <TextBlock Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Text="{Binding Path=ProgressText}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="15" Margin="0"/>

                            <!-- Version Id -->
                            <Label Grid.Row="15" Grid.Column="0" Content="Version Id:" Style="{DynamicResource WorkspaceLabelsStyle}" />
                            <TextBox Grid.Row="15" Grid.Column="2"  Text="{Binding Path=VersionId, Mode=OneWay}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="300" IsReadOnly="True"/>

                            <!-- Version Name -->
                            <Label Grid.Row="7" Grid.Column="0" Content="Version Name:" Style="{DynamicResource WorkspaceLabelsStyle}" />
                            <TextBox Grid.Row="7"  Grid.Column="2"  Text="{Binding Path=VersionName, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="300" IsReadOnly="{Binding Path=LockVersion, UpdateSourceTrigger=PropertyChanged}"/>

                            <!-- Version Description -->
                            <Label Grid.Row="9" Grid.Column="0" Content="Version Release Notes:" Style="{DynamicResource WorkspaceLabelsStyle}" />
                            <TextBox Grid.Row="9" Grid.Column="2" Text="{Binding Path=VersionDescription, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="300" IsReadOnly="{Binding Path=LockVersion, UpdateSourceTrigger=PropertyChanged}" />

                            <!-- Target Directory  -->
                            <Label Grid.Row="11" Grid.Column="0" Content="Target Directory:" Style="{DynamicResource WorkspaceLabelsStyle}" />
                            <TextBox Grid.Row="11" Grid.Column="2" Text="{Binding Path=TargetPath, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="300" IsReadOnly="{Binding Path=EnableSyncNot, UpdateSourceTrigger=PropertyChanged}" />

                            <!--<StackPanel  Orientation="Horizontal" HorizontalAlignment="Right">
                                
                            </StackPanel>-->
                            <Button Grid.Row="11"  Grid.Column="2" Name="btnShowPath" Content="Open"  Command="{Binding OpenPathExecute}" Width="60" Margin="260,0,0,0"  />

                            <!-- Default Target Directory  -->
                            <Label Grid.Row="13" Grid.Column="0" Content="Default Target Directory:" Style="{DynamicResource WorkspaceLabelsStyle}" />
                            <CheckBox  Grid.Row="13" Grid.Column="2"  IsChecked ="{Binding Path=DefaultTargetPathInd, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="400" IsEnabled="{Binding Path=LockCheck, UpdateSourceTrigger=PropertyChanged}" />
                            <Button Grid.Row="13" Grid.Column="2" Name="btnAddPath" Content="Browse"  Command="{Binding SelectDirectoryCommand}" Width="80" Margin="0,0,270,0" IsEnabled="{Binding Path=EnableSync, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" />

                            <!-- ECR Id  -->
                            <Label Grid.Row="5" Grid.Column="0" Content="ECR Id:" Style="{DynamicResource WorkspaceLabelsStyle}" />
                            <TextBox Grid.Row="5" Grid.Column="2" Text="{Binding Path=EcrId, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="300"  />



                        </Grid>



                    </TabItem>


                    <!--Properties TabItem-->
                    <TabItem Header="Project Properties" Style="{DynamicResource MetroTabItem}" BorderBrush="Red" >
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />

                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="6" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="6" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="6" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>



                            <!-- Name -->
                            <Label Grid.Row="1" Grid.Column="0" Content="Name:" Style="{DynamicResource WorkspaceLabelsStyle}" />
                            <TextBox Grid.Row="1" Grid.Column="2" Text="{Binding Path=Name, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="400"  />

                            <!-- Step -->
                            <Label Grid.Row="3" Grid.Column="0" Content="Step:" Style="{DynamicResource WorkspaceLabelsStyle}" />
                            <Grid Grid.Row="3" Grid.Column="2">
                                <ComboBox  Grid.Row="3" Grid.Column="2" ItemsSource="{Binding Path=ProjectSteps}" SelectedValue="{Binding Path=SelectedStep, Mode=TwoWay}"  HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="200" />
                                <TextBlock IsHitTestVisible="False" Margin="10,5,0,0"  Foreground="Red" Text="{Binding Path=ComboText}"></TextBlock>
                            </Grid>

                            <!-- Description -->
                            <Label Grid.Row="5" Grid.Column="0" Content="Description:" Style="{DynamicResource WorkspaceLabelsStyle}" />
                            <TextBox Grid.Row="5" Grid.Column="2" Text="{Binding Path=Description, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="400"   />

                            <!-- Created On -->
                            <Label Grid.Row="7" Grid.Column="0" Content="Created On:" Style="{DynamicResource WorkspaceLabelsStyle}" Visibility="{Binding Path=HideField, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBox Grid.Row="7" Grid.Column="2" Text="{Binding Path=CreationDate, StringFormat={x:Static local:ProjectDetailsViewModel.DateTimeFormat}, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="400" IsReadOnly="True"  />

                            <!-- Modified On -->
                            <Label Grid.Row="9" Grid.Column="0" Content="Modified On:" Style="{DynamicResource WorkspaceLabelsStyle}" Visibility="{Binding Path=HideField, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBox Grid.Row="9" Grid.Column="2" Text="{Binding Path=LastUpdateTime, StringFormat={x:Static local:ProjectDetailsViewModel.DateTimeFormat}, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="400" IsReadOnly="True" />

                            <!-- Modified By -->
                            <Label Grid.Row="11" Grid.Column="0" Content="Modified By:" Style="{DynamicResource WorkspaceLabelsStyle}" Visibility="{Binding Path=HideField, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBox Grid.Row="11" Grid.Column="2" Text="{Binding Path=LastUpdateUser, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="400" IsReadOnly="True" />

                            <!-- Active Version -->
                            <Label Grid.Row="13" Grid.Column="0" Content="Active Version:" Style="{DynamicResource WorkspaceLabelsStyle}" Visibility="{Binding Path=HideField, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBox Grid.Row="13" Grid.Column="2" Text="{Binding Path=ActiveVersion, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="400"  IsReadOnly="True"/>

                            <!-- Status -->
                            <Label Grid.Row="15" Grid.Column="0" Content="Status:" Style="{DynamicResource WorkspaceLabelsStyle}" Visibility="{Binding Path=HideField, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBox Grid.Row="15" Grid.Column="2" Text="{Binding Path=ProjectStatus, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="400" IsReadOnly="True"  />

                            <!-- Synchronization -->
                            <Label Grid.Row="17" Grid.Column="0" Content="Synchronization:" Style="{DynamicResource WorkspaceLabelsStyle}" />

                            <CheckBox Content="SCD USA" Grid.Row="17" Grid.Column="2"  IsChecked ="{Binding Path=Synchronization, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" IsEnabled="True" />
                            <CheckBox Content="IRIS Technologies" Margin="-265,0,0,0" Grid.Row="17" Grid.Column="4"  IsChecked ="{Binding Path=IRISTechInd, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" IsEnabled="True" />
                            <!--<CheckBox Content="TBD" Margin="-190,0,0,0"  Grid.Row="17" Grid.Column="6"  IsChecked ="False" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center"  IsEnabled="True" />-->

                            
                            <!-- for Clone -->
                            <!--<Expander  Grid.Row="{Binding Path=ExpenderRow, UpdateSourceTrigger=PropertyChanged}" x:Name="Expander" VerticalAlignment="Center" IsExpanded="True" Visibility="{Binding Path=ShowField, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="3">-->
                            <Expander  Grid.Row="23" x:Name="Expander" VerticalAlignment="Center" IsExpanded="True" Visibility="{Binding Path=ShowField, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="3">
                                <Expander.Header>
                                    <StackPanel Orientation="Horizontal" >
                                        <TextBlock>
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="{}{0} - Target Folder">
                                                    <Binding Path="TreeHeader" Mode="TwoWay" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </StackPanel>
                                </Expander.Header>

                                <TreeView Name="ExplorerTreeViewStandard" Grid.Row="0" Margin="0,10,10,10" VerticalAlignment="Stretch" ItemsSource="{Binding TreeNodes}" FontSize="14" Background="Transparent" BorderThickness="0" >
                                    <TreeView.ItemContainerStyle>
                                        <!-- This Style binds a TreeViewItem to a TreeViewNodeViewModel -->
                                        <Style TargetType="{x:Type TreeViewItem}">
                                            <!--<EventSetter Event="Selected" Handler="TreeViewSelectedItemChanged" />-->
                                            <!--<EventSetter Event="Expanded" Handler="TreeExpanded" />-->
                                            <Setter Property="IsExpanded" Value="{Binding IsExpandedTree, Mode=TwoWay}"/>
                                            <Setter Property="IsSelected" Value="{Binding IsSelectedTree, Mode=TwoWay}" />
                                            <Setter Property="FontWeight" Value="DemiBold" />
                                            <Setter Property="FontSize" Value="16" />
                                            <Setter Property="Foreground" Value="DarkBlue" />
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="FontWeight" Value="Bold" />
                                                    <Setter Property="Foreground" Value="Black" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TreeView.ItemContainerStyle>

                                    <TreeView.Resources>
                                        <!--/////////////////////////////////////-->
                                        <!-- Provide the Templates per Node Type -->
                                        <!--/////////////////////////////////////-->
                                        <!-- Root Node Template -->
                                        <HierarchicalDataTemplate DataType="{x:Type local:TreeViewRootNodeViewModel}" ItemsSource="{Binding Children}"  >
                                            <StackPanel Orientation="Horizontal">

                                                <Image Width="16" Height="16" Source="{Binding NodeIcon}" VerticalAlignment="Center"  />
                                                <TextBlock Text="{Binding NodeData}" VerticalAlignment="Center" Margin="3,0,0,0" FontWeight="Bold" FontStyle="Italic" FontSize="20" />
                                            </StackPanel>
                                        </HierarchicalDataTemplate>
                                        <!-- Folder Node Template -->
                                        <HierarchicalDataTemplate DataType="{x:Type local:TreeViewFolderNodeViewModel}" ItemsSource="{Binding Children}" >
                                            <StackPanel Orientation="Horizontal">

                                                <Image Width="16" Height="16" Source="{Binding NodeIcon}" VerticalAlignment="Center"  />
                                                <TextBlock Text="{Binding NodeData}" VerticalAlignment="Center" Margin="3,0,0,0" />
                                            </StackPanel>
                                        </HierarchicalDataTemplate>
                                        <!-- Project Node Template -->
                                        <HierarchicalDataTemplate DataType="{x:Type local:TreeViewProjectNodeViewModel}" ItemsSource="{Binding Children}" >
                                            <StackPanel Orientation="Horizontal">

                                                <Image Width="16" Height="16" Source="{Binding NodeIcon}" VerticalAlignment="Center"  />
                                                <TextBlock Text="{Binding NodeData}" VerticalAlignment="Center" Margin="3,0,0,0" />
                                            </StackPanel>
                                        </HierarchicalDataTemplate>
                                        <!-- Version Node Template -->
                                        <HierarchicalDataTemplate DataType="{x:Type local:TreeViewVersionNodeViewModel}" ItemsSource="{Binding Children}" >
                                            <StackPanel Orientation="Horizontal">

                                                <Image Width="16" Height="16" Source="{Binding NodeIcon}" VerticalAlignment="Center"  />
                                                <TextBlock Text="{Binding NodeData}" VerticalAlignment="Center" Margin="3,0,0,0"  />
                                            </StackPanel>
                                        </HierarchicalDataTemplate>
                                        <!-- Template Node Template -->
                                        <HierarchicalDataTemplate DataType="{x:Type local:TreeViewTemplateNodeViewModel}" ItemsSource="{Binding Children}" >
                                            <StackPanel Orientation="Horizontal">
                                                <Image Width="16" Height="16" Source="{Binding NodeIcon}" VerticalAlignment="Center"  />
                                                <TextBlock Text="{Binding NodeData}" VerticalAlignment="Center" Margin="3,0,0,0" />
                                            </StackPanel>
                                        </HierarchicalDataTemplate>
                                    </TreeView.Resources>
                                </TreeView>

                            </Expander>


                        </Grid>

                    </TabItem>


                    <!--Content TabItem-->

                    <TabItem Header="Content Details" Style="{DynamicResource MetroTabItem}" BorderBrush="LimeGreen" >

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />

                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="6" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <TreeView  Name="ContentTreeViewStandard" Grid.Row="1" Margin="0,10,10,10" VerticalAlignment="Stretch" ItemsSource="{Binding TreeNodesLinks}" FontSize="14" Background="Transparent" BorderThickness="0" Grid.ColumnSpan="3" Grid.RowSpan="7">
                                <TreeView.ItemContainerStyle>
                                    <!-- This Style binds a TreeViewItem to a TreeViewNodeViewModel -->
                                    <Style TargetType="{x:Type TreeViewItem}">
                                        <!--<EventSetter Event="Selected" Handler="TreeViewSelectedItemChanged" />-->
                                        <!--<EventSetter Event="Expanded" Handler="TreeExpanded" />-->
                                        <!--<Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />-->
                                        <Setter Property="IsExpanded" Value="False" />
                                        <Setter Property="IsSelected" Value="{Binding IsSelectedLinkedTree, Mode=TwoWay}" />
                                        <Setter Property="FontWeight" Value="DemiBold" />
                                        <Setter Property="FontSize" Value="16" />
                                        <Setter Property="Foreground" Value="DarkBlue" />
                                        <!--<Setter Property="mvvm:EventToCommand.Event" Value="MouseDoubleClick" />
                                        <Setter Property="mvvm:EventToCommand.Command" Value="{Binding ContentCopyCommand}" />-->
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="FontWeight" Value="Bold" />
                                                <Setter Property="Foreground" Value="Black" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TreeView.ItemContainerStyle>

                                <TreeView.Resources>
                                    <!--/////////////////////////////////////-->
                                    <!-- Provide the Templates per Node Type -->
                                    <!--/////////////////////////////////////-->
                                    <!-- Root Node Template -->
                                    <HierarchicalDataTemplate DataType="{x:Type local:CMTreeViewRootNodeViewModel}" ItemsSource="{Binding Children}" >
                                        <StackPanel Orientation="Horizontal">
                                            <Image Width="16" Height="16" Source="{Binding NodeIcon}" VerticalAlignment="Center"  />
                                            <TextBlock Text="{Binding NodeData}" VerticalAlignment="Center" Margin="3,0,0,0" FontWeight="Bold" FontStyle="Italic" FontSize="20" />
                                        </StackPanel>
                                    </HierarchicalDataTemplate>

                                    <!-- Folder Node Template -->
                                    <HierarchicalDataTemplate DataType="{x:Type local:CMTreeViewFolderNodeViewModel}" ItemsSource="{Binding Children}" >
                                        <StackPanel Orientation="Horizontal">
                                            <Image Width="16" Height="16" Source="{Binding NodeIcon}" VerticalAlignment="Center"  />
                                            <TextBlock Text="{Binding NodeData}" VerticalAlignment="Center" Margin="3,0,0,0" />
                                        </StackPanel>
                                    </HierarchicalDataTemplate>

                                    <!-- Content Node Template -->
                                    <HierarchicalDataTemplate DataType="{x:Type local:CMTreeViewContentNodeViewModel}" ItemsSource="{Binding Children}" >
                                        <StackPanel Orientation="Horizontal">

                                            <Image Width="16" Height="16" Source="{Binding NodeIcon}" VerticalAlignment="Center"  />
                                            <TextBlock Text="{Binding NodeData}" VerticalAlignment="Center" Margin="3,0,0,0" />
                                        </StackPanel>
                                    </HierarchicalDataTemplate>


                                    <!-- Version Node Template -->
                                    <HierarchicalDataTemplate DataType="{x:Type local:CMTreeViewVersionNodeViewModel}" ItemsSource="{Binding Children}" >
                                        <StackPanel Orientation="Horizontal">
                                            <StackPanel.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="Execute" Command="{Binding ContentCopyCommand}" />
                                                    <MenuItem Header="Open in CM" Command="{Binding OpenContentVersionInCm}"/>
                                                </ContextMenu>
                                            </StackPanel.ContextMenu>
                                            <Image Width="16" Height="16" Source="{Binding NodeIcon}" VerticalAlignment="Center"  />
                                            <TextBlock Text="{Binding NodeData}" VerticalAlignment="Center" Margin="3,0,0,0" />
                                        </StackPanel>
                                    </HierarchicalDataTemplate>
                                </TreeView.Resources>
                            </TreeView>


                            <!-- CR 3600 -->
                            <!-- Content Name -->
                            <!--<Label Grid.Row="3" Grid.Column="0" Content="Content Name:" Style="{DynamicResource WorkspaceLabelsStyle}" />
                            <TextBox Grid.Row="3" Grid.Column="2" Text="{Binding Path=ContentName, Mode=OneWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="400" IsReadOnly="True" />-->

                            <!-- Version Name -->
                            <!--<Label Grid.Row="5" Grid.Column="0" Content="Version Name:" Style="{DynamicResource WorkspaceLabelsStyle}" />
                            <TextBox Grid.Row="5" Grid.Column="2" Text="{Binding Path=NodeName, Mode=OneWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="400" IsReadOnly="True" />-->

                            <!-- Description -->
                            <Label Grid.Row="11" Grid.Column="0" Content="Description:" Style="{DynamicResource WorkspaceLabelsStyle}" />
                            <TextBox Grid.Row="11" Grid.Column="2" Text="{Binding Path=NodeDescription, Mode=OneWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="400"  IsReadOnly="True" />

                            <!-- Command Line  -->
                            <Label Grid.Row="13" Grid.Column="0" Content="Command Line :" Style="{DynamicResource WorkspaceLabelsStyle}" />
                            <TextBox Grid.Row="13" Grid.Column="2" Text="{Binding Path=CommandLine, Mode=OneWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="400" IsReadOnly="True"  />


                            <!-- Status -->
                            <!--<Label Grid.Row="11" Grid.Column="0" Content="Status:" Style="{DynamicResource WorkspaceLabelsStyle}" />
                            <TextBox Grid.Row="11" Grid.Column="2" Text="{Binding Path=NodeStatus, Mode=OneWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="400" IsReadOnly="True"  />-->


                            <!-- Content Path -->
                            <!--<Label Grid.Row="13" Grid.Column="0" Content="Content Path " Style="{DynamicResource WorkspaceLabelsStyle}" />
                            <TextBox Grid.Row="13" Grid.Column="2" Text="{Binding Path=ContentPath, Mode= OneWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="400" IsReadOnly="True"  />-->

                            <!-- Files -->
                            <!--<Label Grid.Row="15" Grid.Column="0" Content="Files" Style="{DynamicResource WorkspaceLabelsStyle}" />
                            <ListBox x:Name="_Files" Grid.Row="15" Grid.Column="2" ItemsSource="{Binding Files, Mode= OneWay}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="400">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>-->
                            <!-- ListView Grid.Row="13" Grid.Column="2" ItemsSource="{Binding Files, Mode= OneWay}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="400" IsEnabled="False"/-->

                        </Grid>

                    </TabItem>


                    <!--Certificates TabItem-->
                    <TabItem Header="Certificates" Style="{DynamicResource MetroTabItem}" BorderBrush="Magenta" 
                             dd:DragDrop.IsDragSource="False" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding}" dd:DragDrop.UseDefaultDragAdorner="True"  >
                        <Grid>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="10" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />

                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="6" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Label Grid.Row="1" Grid.Column="0" Content="Station Certificates: " Style="{DynamicResource WorkspaceLabelsStyle}" FontSize="18"  FontWeight="Bold" />
                            <ListView Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3"  MinHeight="70" SelectedItem="{Binding Path=selectedCertificate}" HorizontalAlignment="Stretch" Margin="0,8,0,0" VerticalAlignment="Stretch" ItemsSource="{Binding Certificates}"
                                  SelectionMode="Single" Style="{StaticResource CertificatesListViewStyle}"
                                  dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding}" dd:DragDrop.UseDefaultDragAdorner="True">
                                <ListView.Resources>
                                    <Style TargetType="GridViewColumnHeader">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </Style>
                                </ListView.Resources>
                                <ListView.ContextMenu >
                                    <ContextMenu>
                                        <MenuItem Header="Delete"  Command="{Binding DeleteCertificateCommand}"/>
                                        <Separator/>
                                        <MenuItem Header="Show Certified Stations" Command="{Binding StationCertificateStationCommand}"/>
                                    </ContextMenu>
                                </ListView.ContextMenu>
                                <ListView.View>
                                    <GridView AllowsColumnReorder="False">
                                        <GridViewColumn Width="300" DisplayMemberBinding="{Binding CerName}"/>
                                    </GridView>
                                </ListView.View>
                            </ListView>

                            <Separator Grid.Row="5" Style="{DynamicResource HorizontalSeparatorStyle}" Margin="0,0,0,0" Grid.ColumnSpan="3"/>

                            <Label Grid.Row="7" Grid.Column="0" Content="User Certificates: "  Foreground="Black" FontSize="18"  FontWeight="Bold" />
                            <ListView Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="3"  MinHeight="70" SelectedItem="{Binding Path=SelectedUserCertificate}" HorizontalAlignment="Stretch" Margin="0,8,0,0" VerticalAlignment="Stretch" ItemsSource="{Binding UserCertificates}"
                                  SelectionMode="Single" Style="{StaticResource CertificatesListViewStyle}"
                                  dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding}" dd:DragDrop.UseDefaultDragAdorner="True">
                                <ListView.Resources>
                                    <Style TargetType="GridViewColumnHeader">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </Style>
                                </ListView.Resources>
                                <ListView.ContextMenu >
                                    <ContextMenu>
                                        <MenuItem Header="Delete"  Command="{Binding DeleteUserCertificateCommand}"/>
                                    </ContextMenu>
                                </ListView.ContextMenu>
                                <ListView.View>
                                    <GridView AllowsColumnReorder="False">
                                        <GridViewColumn Width="300" DisplayMemberBinding="{Binding UserCertificateName}"/>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </Grid>
                    </TabItem>
                </TabControl>
            </ScrollViewer>
        </DockPanel>

        <!--Divider-->
        <Separator Grid.Row="1" Style="{DynamicResource HorizontalSeparatorStyle}" Margin="0,0,15,0" />

        <!--Command Buttons-->
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0" Style="{DynamicResource WorkspaceActionsStackPanelStyle}" >
                <Button Name="btnAddCert" Content=" Add Station Certificate " Command="{Binding AddCertCommand}" Margin="0,0,0,0" />
                <Button Name="btnUserCertificate" Content=" Add User Certificate " Command="{Binding AddUserCertificateCommand }" Margin="20,0,0,0" />
                <Button Name="btnAddContent" Content=" Add Content " Command="{Binding AddContentCommand}" Margin="20,0,0,0" />
            </StackPanel>

            <StackPanel Grid.Column="2" Style="{DynamicResource WorkspaceActionsStackPanelStyle}" >
                <Button Name="btnSave" Content=" Save " Command="{Binding SaveCommand}" Margin="20,0,0,0" />
            </StackPanel>
            
        </Grid>
        <!-- Priority Popup overlay-->
        <ContentControl Grid.Row="0" Grid.RowSpan="20" Content="{Binding OverlayContentViewModel, Mode=OneWay}" Visibility="{Binding ShowPopupContent, Converter={StaticResource VisibilityConverter}, ConverterParameter=True}" Margin="-15,0,0,0"/>
    </Grid>

</UserControl>