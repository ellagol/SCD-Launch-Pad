<UserControl x:Class="ContentMgmtModule.CMWhereUsedView" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mvvm="clr-namespace:Infra.MVVM;assembly=Infra.MVVM"           
    xmlns:local="clr-namespace:ContentMgmtModule"
    xmlns:np="NavigationPane"
    xmlns:dd="clr-namespace:Infra.DragDrop;assembly=Infra.DragDrop"          
    mc:Ignorable="d"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="445" d:DesignWidth="488"
    >

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--Metro Tab Control-->
                <ResourceDictionary Source="pack://application:,,,/ContentMgmtModule;component/Resources/Themes/MetroTabStyle.xaml" />

                <!--Custom Controls-->
                <ResourceDictionary Source="pack://application:,,,/ContentMgmtModule;component/Resources/Themes/CustomControlsStyles.xaml" />

            </ResourceDictionary.MergedDictionaries>


        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.1*"/>
            <ColumnDefinition Width="0.85*"/>
            <ColumnDefinition Width="0.3*"/>
            <ColumnDefinition Width="0.85*"/>
            <ColumnDefinition Width="0.1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="35" />
            <RowDefinition Height="180"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="35"/>
            <RowDefinition Height="180"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>

        <Label Grid.Column="2" Grid.Row="1" Content="Contents" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{DynamicResource WorkspaceLabelsStyle}" />
        <Label Grid.Column="2"  Grid.Row="4" Content="Projects" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{DynamicResource WorkspaceLabelsStyle}"  />


        <!--contents-->
        <ListView  x:Name="ContentsList" Grid.Column="1" Grid.Row="2" SelectedItem="{Binding Path=SelectedContent}" ItemsSource="{Binding ContentLinks}" HorizontalContentAlignment="Stretch" Grid.ColumnSpan="3" >
            <ListView.Resources>
                <ContextMenu x:Key="ItemContextMenu">
                    <MenuItem Header="Open Content" Command="{Binding Path=DataContext.OpenContentInAnotherWorkspaceCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Background="WhiteSmoke" />
                </ContextMenu>
                <Style TargetType="GridViewColumnHeader">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Setter Property="Width" Value="auto" />
                </Style>
            </ListView.Resources>

            <ListView.View>
                <GridView x:Name="contents" AllowsColumnReorder="False" >
                    <GridViewColumn Width="337" Header="Content Name" DisplayMemberBinding="{Binding ContentName}"/>
                    <GridViewColumn Width="337" Header="Version Name" DisplayMemberBinding="{Binding VersionName}"/>
                </GridView>
            </ListView.View>

            <ListView.ItemContainerStyle >
                <Style TargetType="{x:Type ListViewItem}" >
                    <Setter Property="mvvm:EventToCommand.Event" Value="MouseDoubleClick" />
                    <Setter Property="mvvm:EventToCommand.Command" Value="{Binding ElementName=ContentsList, Path=DataContext.OpenContentInAnotherWorkspaceCommand}" />
                    <Setter Property="mvvm:EventToCommand.CommandParameter" Value="{Binding OpenContentInAnotherWorkspaceCommand}" />

                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                </Style>
            </ListView.ItemContainerStyle>

        </ListView>

        <!--projects-->
        <ListView x:Name="ProjectsList" Grid.Column="1" Grid.Row="5" SelectedItem="{Binding Path=SelectedProject, Mode=TwoWay}" 
                  ItemsSource="{Binding ContentProjects}" HorizontalContentAlignment="Stretch" Grid.ColumnSpan="3">

            <ListView.Resources>
                <ContextMenu x:Key="ItemContextMenu">
                    <MenuItem Header="Open in PE" 
                              Command="{Binding Path=DataContext.OpenProjectInPe, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" 
                              Background="WhiteSmoke" />
                </ContextMenu>
                <Style TargetType="GridViewColumnHeader">
                    <Setter Property="IsEnabled" Value="True"/>
                    <Setter Property="Width" Value="auto" />
                </Style>
            </ListView.Resources>

            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}" >
                    <Setter Property="mvvm:EventToCommand.Event" Value="MouseDoubleClick" />
                    <Setter Property="mvvm:EventToCommand.Command" Value="{Binding ElementName=ProjectsList, Path=DataContext.OpenProjectInPe}" />
                    <Setter Property="mvvm:EventToCommand.CommandParameter" Value="{Binding OpenProjectInPe}" />

                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.View>
                <GridView x:Name="projects" AllowsColumnReorder="False" >
                    <GridViewColumn Width="300" Header="Path" DisplayMemberBinding="{Binding HierarchyPath}"/>
                    <GridViewColumn Width="60" Header="Code" DisplayMemberBinding="{Binding Code}"/>
                    <GridViewColumn Width="60" Header="Step" DisplayMemberBinding="{Binding Step}"/>
                    <GridViewColumn Width="80" Header="Project Name" DisplayMemberBinding="{Binding Name}"/>
                    <GridViewColumn Width="60" Header="Version" DisplayMemberBinding="{Binding VersionName}"/>
                    <GridViewColumn Width="60" Header="Status" DisplayMemberBinding="{Binding VersionStatus}"/>                   
                </GridView>
            </ListView.View>           
        </ListView>

        <!--<Button Margin="5" Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="3" Content="Close" Width="80" Command="{Binding CloseCommand}" Height="20" />-->
        <CheckBox  Grid.Row="7" Grid.Column="1"  
                   IsChecked ="{Binding Path=UsedInClosedVersions, ValidatesOnDataErrors=True, 
                                        ValidatesOnExceptions=True, NotifyOnValidationError=True, 
                                        UpdateSourceTrigger=PropertyChanged}" 
                   HorizontalAlignment="Left" VerticalAlignment="Center" 
                   VerticalContentAlignment="Center"/>
        <Label Grid.Row="7" Grid.Column="1" Content="Show closed project versions" 
               Style="{DynamicResource WorkspaceLabelsStyle}" HorizontalAlignment="Left" Margin="25,0,0,0"/>
    </Grid>
</UserControl>
